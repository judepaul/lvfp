<%= form_with(model: speech, local: true) do |form| %>
  <% if speech.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(speech.errors.count, "error") %> prohibited this speech from being saved:</h2>

      <ul>
      <% speech.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%#= form.label :code %>
    <%#= form.text_field :code, id: :speech_code %>
  </div>

  <div class="field">
    <%#= form.label :email_address %>
    <%#= form.text_field :email_address, id: :speech_email_address %>
  </div>


  
<div class="container">
    <div class="container-fluid px-0">
        <div class="row no-gutters">
            <div class="col-sm-12 col-md mr-md-3">
              <div class="card">
                    <div class="card-header text-white"><strong>Add Content</strong></div>
                    <div class="card-body">
                        <div class="form-group row">
                                <div class="mt-2 col-md-12">
                                    <%= form.text_area :content, id: :add_speech_content, size: "30x5", class: 'form-control', placeholder: 'Enter the text to convert speech' %>
                                </div>
                                <div class="mt-4 col-md-12">
                                  <%= select_tag 'acc_code_id', options_for_select(@access_codes.collect{ |c| ["#{c.code} - #{c.title}", c.id]}), prompt: "Select Access Code", class: "form-control", disabled:true %>
                                </div>
                                <div class="mt-4 col-md-12"></div>
                                <div class="mt-4 col-md-6 offset-md-10">
                                  <%= form.submit 'Submit', id: 'save_content', class:"btn btn-primary", disabled: true %>
                                </div>
                            </div>
                    </div>
              </div>
            </div>
            <div class="col-sm-12 col-md ml-md-3">
                <div class="card">
                    <div class="card-header text-white"><strong>Let's Listen</strong></div>
                    <div class="card-body">
                      <div class="form-group row">
                        <div class="mt-2 col-md-12">
                          <%= form.text_area :content, id: :display_speech_content, size: "40x5", class: 'form-control', disabled:true %>
                        </div>
                        <div class="mt-4 col-md-12"></div>
                        <div class="mt-4 col-md-12">
                  <div class="actions" id="textToSynth">
                    <table>
                      <tr>
                        <td style="width:300px;"></td>
                        <td>
                          <audio id="audioPlayback" controls>
                            <source id="audioSource" type="audio/mp3" src="">
                          </audio>
                          <p id="result">
                        </td>
                      </tr>
                    </table>
                  </div> 
                  <div class="mt-4 col-md-6 offset-md-10"></div>
                  </div>
            </div>
        </div>
    </div> 
</div> 

<% end %>

<div class="row"><br/></div>


<script type="text/javascript">

  // Initialize the Amazon Cognito credentials provider
  AWS.config.region = 'us-east-1'; 
  AWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: 'us-east-1:4ab148dd-0ed5-4a4e-a211-58fa42678b45'});
  
  // Function invoked by button click
  function speakText() {
      // Create the JSON parameters for getSynthesizeSpeechUrl
      var speechParams = {
          OutputFormat: "mp3",
          SampleRate: "16000",
          Text: "",
          TextType: "text",
          VoiceId: "Joanna"
      };
      speechParams.Text = document.getElementById("display_speech_content").value;
      // Create the Polly service object and presigner object
      var polly = new AWS.Polly({apiVersion: '2016-06-10'});
      var signer = new AWS.Polly.Presigner(speechParams, polly)
  
      // Create presigned URL of synthesized speech file
      console.log("signer --" +signer.getSynthesizeSpeechUrl);
      signer.getSynthesizeSpeechUrl(speechParams, function(error, url) {
      if (error) {
          document.getElementById('result').innerHTML = error;
      } else {
          document.getElementById('audioSource').src = url;
          document.getElementById('audioPlayback').load();
          document.getElementById('result').innerHTML = "Speech ready to play.";
      }
    });
  }
</script>