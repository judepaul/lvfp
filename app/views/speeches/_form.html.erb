<%= form_with(model: speech, local: true) do |form| %>

  <div class="field">
    <%#= form.label :code %>
    <%#= form.text_field :code, id: :speech_code %>
  </div>

  <div class="field">
    <%#= form.label :email_address %>
    <%#= form.text_field :email_address, id: :speech_email_address %>
  </div>


<div class="row" style="height:30px;"></div>
<%#= render "layouts/shared/flash_message" %>
<p id="notice"><%= notice %></p>
<div class="container">
    <div class="container-fluid px-0">
        <div class="row no-gutters">
            <div class="col-sm-12 col-md mr-md-3">
              <div class="card">
                    <div class="card-header text-white"><strong>Add Article</strong></div>
                    <div class="card-body">
                        <% unless @speech.new_record? %>
                          <div class="form-group row">
                                <div class="mt-2 col-md-3 text-right" style="padding-top:20px;">
                                    <strong>Status</strong>
                                </div>
                                <div class="mt-4 col-md-8 offset-md-1">
                                  <span style="padding: 2px 5px 2px 5px; color:#FFF; background-color: <%= @speech.published? ? 'green' : !@speech.published? ? 'orange' : "" %>;"><strong><%= @speech.published? ? 'Published' : !@speech.published? ? 'Draft' : "" %></strong></span>
                                </div>
                          </div>
                        <% end %>
                        <div class="form-group row">
                                <div class="mt-2 col-md-3 text-right" style="padding-top:20px;">
                                    <strong>Title/Subject</strong> <span style="cursor: pointer;" class="show" data-toggle="tooltip" title="Title that the skill user will hear this first before their content"><i class="fas fa-info-circle fa-lg"></i></span>
                                </div>
                                <div class="mt-4 col-md-8 offset-md-1">
                                  <%= form.text_field :title, id: :article_title, class: 'form-control', value: "#{!@speech.blank? ? @speech.title : ""}" %>
                                </div>
                            </div>

                        <div class="form-group row">
                                <div class="mt-2 col-md-3 text-right" style="padding-top:18px;">
                                    <strong>Content</strong> <span style="cursor: pointer;" class="show" data-toggle="tooltip" title="Main content that the skill users will hear"><i class="fas fa-info-circle fa-lg"></i></span>
                                </div>
                                <div class="mt-4 col-md-8 offset-md-1">
                                  <%= form.text_area :content, id: :add_speech_content, size: "30x9", class: 'form-control show', placeholder: 'Enter the text to convert speech' %>
                                  <div class="mt-4 col-md-8" id="textarea_feedback" style="margin-top:10px !important; font-size:14px;"></div>
                                  <div class="mt-4 col-md-12" style="margin-top:2px !important; font-size:14px;"><strong>Note:-</strong> All the links/special characters will be ignored in the audio</div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="mt-2 col-md-3 text-right" style="padding-top:10px;">
                                    <strong>Select Listener Group</strong>
                                </div>
                                <div class="mt-4 col-md-6 offset-md-1">
                                  <% if @speech.new_record? %>
                                    <%= select_tag 'acc_code_id', options_for_select(@access_codes.collect{ |c| ["#{c.code} - #{c.title}", c.id]}), prompt: "Select Listener Group Access Code", class: "form-control", disabled:true %>
                                  <% else %>
                                    <span style="font-size:16px;"><%= @speech.access_code_speech_map.last.access_code.code %> - <%= @speech.access_code_speech_map.last.access_code.title %></span>
                                  <% end %>
                                </div>
                                <div class="mt-4 col-md-12"></div>
                                <div class="actions text-right" style="padding:0 40px 30px 0; position: absolute; bottom: 0; right: 0;">
                                  <%= link_to 'Cancel', speeches_path, class: "btn btn-outline-primary" %>
                                  <% if @speech.new_record? %>
                                    <%= form.submit 'Save', id: 'save_content', class:"btn btn-outline-primary", disabled: true %>
                                    <%= form.submit 'Publish', id: 'publish_content', class:"btn btn-outline-primary", disabled: true %>
                                  <% else %>
                                    <!-- <audio id="audioPlayback" controls> -->
                                    <audio id="audioPlayback">
                                      <source id="audioSource" type="audio/mp3" src="">
                                    </audio>
                                    <!-- <button type="button" class="close audioPlayback play" onclick="aud_play_pause()" style="outline:none !important; padding-right:15px;"><span><i class="fa fa-play-circle fa-lg" aria-hidden="true"></i></span></button> -->
                                    <button type="button" class="btn btn-outline-primary audioPlayback" onclick="aud_play_pause()">
                                      <span class="play"><i class="fa fa-play-circle fa-lg play" aria-hidden="true"></i></span> Play/Pause
                                    </button>
                                    <%= link_to 'Delete', @speeches, method: :delete, data: { confirm: 'Are you sure?' }, :class => 'btn btn-outline-danger delete-speech', id: "delete-btn" %>
                                    <%= form.submit 'Save', id: 'save_content', class:"btn btn-outline-primary", disabled: @speech.published? ? true : false %>
                                    <% if @speech.draft? %>
                                      <%= form.submit 'Publish', id: 'publish_content', class:"btn btn-outline-primary", disabled: @speech.published? ? true : false %>
                                    <% else %>
                                      <%= form.submit 'Publish', id: 'publish_content', class:"btn btn-outline-primary", disabled: true %>
                                    <% end %>
                                  <% end %>
                                </div>
                    </div>
              </div>
            </div>
        </div>
    </div> 
</div> 

<% end %>

<script type="text/javascript">

$(document).ready(function() {
  
$('#add_speech_content').mouseout(function () {
if ($.trim($('#add_speech_content').val()).length > 0)
{
  $("#acc_code_id").prop("disabled", false);
}
});

$("#acc_code_id").change(function(){
  var text_length = $('#add_speech_content').val().length;

  if($(this).val() == ""){
    $("#save_content").prop("disabled", true);
  }
  else {
    if (text_length > 2999) {
      $("#save_content").prop("disabled", true);
    } else { 
      $("#save_content").prop("disabled", false);
    }
  }
});

var text_max = 2999;
$('#textarea_feedback').html(text_max + ' characters remaining (Appx. 500 words)');
$('#add_speech_content').keyup(function() {
  var text_length = $('#add_speech_content').val().length;
  var text_remaining = text_max - text_length;
  $('#textarea_feedback').html(text_remaining + ' characters remaining  (Appx. 500 words)');
    if (text_length > 2999) {
      $('#add_speech_content').css('border-color','red');
      $("#save_content").prop("disabled", true);
    } else {
      $("#save_content").prop("disabled", false);
    }
    var regex = /[!@#$%ˆ&*()+]|(http|ftp|https)?:\/\/[\-A-Za-z0-9+&@#\/%?=~_|$!:,.;]*/g;
    if($('#add_speech_content').val().match(regex)){
      $('#add_speech_content').css('border-color', 'red');
    }else{
      $('#add_speech_content').css('border-color', '');
    }

  });


$('#save_content').click(function(){
  var regex = /[!@#$%ˆ&*()+]|(http|ftp|https)?:\/\/[\-A-Za-z0-9+&@#\/%?=~_|$!:,.;]*/g;
  // if($('#add_speech_content').val().match(regex)){
  //   $('#add_speech_content').css('border-color', 'red');
  //   alert("Uh-Oh! Sorry, links or special characters are not allowed. Please remove them or replace them with text");
  //   return false;
  // }
  //var content = $('#add_speech_content').val();
  //$('#add_speech_content').val(content.replace(/[!@#$%ˆ&*()+]|(http|ftp|https)?:\/\/[\-A-Za-z0-9+&@#\/%?=~_|$!:,.;]*/g, ''));
});

});

  // var recognition = new SpeechRecognition();
  // recognition.onresult = function(event) {
  //   if (event.results.length > 0) {
  //     display_speech_content.value = event.results[0][0].transcript;
  //     display_speech_content.form.submit();
  //   }
  // }

  // Initialize the Amazon Cognito credentials provider
  AWS.config.region = 'us-east-1'; 
  AWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: 'us-east-1:4ab148dd-0ed5-4a4e-a211-58fa42678b45'});
  
  // Function invoked by button click
  function speakText() {
      // Create the JSON parameters for getSynthesizeSpeechUrl
      var speechParams = {
          OutputFormat: "mp3",
          SampleRate: "16000",
          Text: "",
          TextType: "text",
          VoiceId: "Joanna"
      };
      //alert(document.getElementById("add_speech_content").value);
      speech_content = document.getElementById("add_speech_content").value
      speechParams.Text = speech_content.replace(/[!@#$%ˆ&*()+]|(http|ftp|https)?:\/\/[\-A-Za-z0-9+&@#\/%?=~_|$!:,.;]*/g, '');
      //speechParams.Text = $("#contentModal").find('speech_content').val();
      
      // Create the Polly service object and presigner object
      var polly = new AWS.Polly({apiVersion: '2016-06-10'});
      var signer = new AWS.Polly.Presigner(speechParams, polly)
  
      // Create presigned URL of synthesized speech file
      console.log("signer --" +signer.getSynthesizeSpeechUrl);
      signer.getSynthesizeSpeechUrl(speechParams, function(error, url) {
      if (error) {
          //document.getElementById('result').innerHTML = error;
      } else {
          document.getElementById('audioSource').src = url;
          document.getElementById('audioPlayback').load();
          //document.getElementById('result').innerHTML = "Speech ready to play.";
      }
    });
  }

  function aud_play_pause() {
  var myAudio = document.getElementById("audioPlayback");
  if (myAudio.paused) {
    myAudio.play();
    $(".play").html("").html('<i class="fa fa-pause-circle fa-lg" aria-hidden="true"></i>');
  } else {
    myAudio.pause();
    $(".play").html("").html('<i class="fa fa-play-circle fa-lg" aria-hidden="true"></i>');
  }
}

</script>